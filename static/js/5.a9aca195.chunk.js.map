{"version":3,"sources":["components/Loading/Loading.js","components/Button/Button.js","templates/SignUpForm/SignUpForm.js","routes/Signup.js"],"names":["Loading","className","xmlns","width","height","viewBox","preserveAspectRatio","cx","cy","fill","stroke","strokeWidth","r","strokeDasharray","attributeName","type","repeatCount","dur","values","keyTimes","Button","props","disabled","loading","text","onClick","defaultProps","SignUpForm","useState","setLoading","useForm","register","handleSubmit","errors","history","useHistory","style","fontWeight","onSubmit","data","setTimeout","push","pathname","state","htmlFor","name","id","ref","required","firstname","message","email","password","Signup"],"mappings":"gHA8BeA,EA9BC,kBACd,qBACEC,UAAU,eACVC,MAAM,6BACNC,MAAM,OACNC,OAAO,OACPC,QAAQ,cACRC,oBAAoB,WANtB,SAQE,wBACEC,GAAG,KACHC,GAAG,KACHC,KAAK,OACLC,OAAO,OACPC,YAAY,KACZC,EAAE,KACFC,gBAAgB,uCAPlB,SASE,kCACEC,cAAc,YACdC,KAAK,SACLC,YAAY,aACZC,IAAI,KACJC,OAAO,oBACPC,SAAS,aCrBXC,EAAS,SAACC,GAAW,IACjBpB,EAAgDoB,EAAhDpB,UAAWqB,EAAqCD,EAArCC,SAAUC,EAA2BF,EAA3BE,QAASC,EAAkBH,EAAlBG,KAAMC,EAAYJ,EAAZI,QAC5C,OACE,wBACExB,UAAS,2BAAsBA,EAAS,WAAOA,GAAP,IACxCwB,QAASA,EACTH,SAAUA,EAHZ,SAKGC,EAAU,cAAC,EAAD,IAAcC,KAkB/BJ,EAAOM,aAAe,CACpBJ,UAAU,EACVC,SAAS,GAGIH,O,6GCgDAO,G,MA5EI,WAAO,IAAD,EACOC,oBAAS,GADhB,mBAChBL,EADgB,KACPM,EADO,OAEoBC,cAAnCC,EAFe,EAEfA,SAAUC,EAFK,EAELA,aAAcC,EAFT,EAESA,OAC1BC,EAAUC,cAchB,OACE,sBAAKlC,UAAU,kBAAf,UACE,+BACE,sBAAMmC,MAAO,CAAEC,WAAY,KAA3B,mBACA,uBAFF,aAKA,4HAIA,uBAAMC,SAAUN,GAvBH,SAACO,GAChBV,GAAW,GACXW,YACE,kBACEN,EAAQO,KAAK,CACXC,SAAU,iBACVC,MAAOJ,MAEX,QAeA,UACE,8BACE,uBAAOK,QAAQ,YAAf,wBACA,uBACE3C,UAAU,kBACV4C,KAAK,YACLC,GAAG,YACH/B,KAAK,OACLgC,IAAKhB,EAAS,CAAEiB,SAAU,0BAE3Bf,EAAOgB,WACN,sBAAMhD,UAAU,aAAhB,SAA8BgC,EAAOgB,UAAUC,aAGnD,8BACE,uBAAON,QAAQ,QAAf,2BACA,uBACE3C,UAAU,kBACV4C,KAAK,QACL9B,KAAK,QACL+B,GAAG,QACHC,IAAKhB,EAAS,CAAEiB,SAAU,wBAE3Bf,EAAOkB,OACN,sBAAMlD,UAAU,aAAhB,SAA8BgC,EAAOkB,MAAMD,aAG/C,8BACE,uBAAON,QAAQ,WAAf,sBACA,uBACE3C,UAAU,kBACV4C,KAAK,WACL9B,KAAK,WACL+B,GAAG,WACHC,IAAKhB,EAAS,CAAEiB,SAAU,2BAE3Bf,EAAOmB,UACN,sBAAMnD,UAAU,aAAhB,SAA8BgC,EAAOmB,SAASF,aAGlD,qBAAKjD,UAAU,cAAf,SACE,cAACmB,EAAA,EAAD,CAAQI,KAAK,UAAUD,QAASA,EAASD,SAAUC,cCvE9C8B,UAFA,kBAAM,cAAC,EAAD","file":"static/js/5.a9aca195.chunk.js","sourcesContent":["const Loading = () => (\r\n  <svg\r\n    className='loading-zoom'\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    width='30px'\r\n    height='30px'\r\n    viewBox='0 0 100 100'\r\n    preserveAspectRatio='xMidYMid'\r\n  >\r\n    <circle\r\n      cx='50'\r\n      cy='50'\r\n      fill='none'\r\n      stroke='#fff'\r\n      strokeWidth='10'\r\n      r='35'\r\n      strokeDasharray='164.93361431346415 56.97787143782138'\r\n    >\r\n      <animateTransform\r\n        attributeName='transform'\r\n        type='rotate'\r\n        repeatCount='indefinite'\r\n        dur='1s'\r\n        values='0 50 50;360 50 50'\r\n        keyTimes='0;1'\r\n      ></animateTransform>\r\n    </circle>\r\n  </svg>\r\n);\r\n\r\nexport default Loading;\r\n","import PropTypes from 'prop-types';\r\nimport Loading from '../Loading/Loading';\r\n\r\nconst Button = (props) => {\r\n  const { className, disabled, loading, text, onClick } = props;\r\n  return (\r\n    <button\r\n      className={`button hvr-shadow${className ? ` ${className}` : ``}`}\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n    >\r\n      {loading ? <Loading /> : text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  // * Optional class name\r\n  className: PropTypes.string,\r\n  // * Optional disabled state\r\n  disabled: PropTypes.bool,\r\n  // * Optional loading state\r\n  loading: PropTypes.bool,\r\n  // * Custom onclick function\r\n  onClick: PropTypes.func,\r\n  // * Text to display in button\r\n  text: PropTypes.string,\r\n};\r\n\r\nButton.defaultProps = {\r\n  disabled: false,\r\n  loading: false,\r\n};\r\n\r\nexport default Button;\r\n","import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport Button from '../../components/Button/Button';\nimport './SignUpForm.css';\n\nconst SignUpForm = () => {\n  const [loading, setLoading] = useState(false);\n  const { register, handleSubmit, errors } = useForm();\n  const history = useHistory();\n\n  const onSubmit = (data) => {\n    setLoading(true);\n    setTimeout(\n      () =>\n        history.push({\n          pathname: './confirmation',\n          state: data,\n        }),\n      2000\n    );\n  };\n\n  return (\n    <div className='signup form-box'>\n      <h1>\n        <span style={{ fontWeight: 500 }}>Let's</span>\n        <br />\n        Sign Up\n      </h1>\n      <p>\n        Use the form below to sign up for this super awesome service. You're\n        only a few steps away!\n      </p>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <p>\n          <label htmlFor='firstname'>First Name</label>\n          <input\n            className='form-box__input'\n            name='firstname'\n            id='firstname'\n            type='text'\n            ref={register({ required: 'First name required' })}\n          />\n          {errors.firstname && (\n            <span className='error-text'>{errors.firstname.message}</span>\n          )}\n        </p>\n        <p>\n          <label htmlFor='email'>Email Address</label>\n          <input\n            className='form-box__input'\n            name='email'\n            type='email'\n            id='email'\n            ref={register({ required: 'Email is required' })}\n          />\n          {errors.email && (\n            <span className='error-text'>{errors.email.message}</span>\n          )}\n        </p>\n        <p>\n          <label htmlFor='password'>Password</label>\n          <input\n            className='form-box__input'\n            name='password'\n            type='password'\n            id='password'\n            ref={register({ required: 'Password is required' })}\n          />\n          {errors.password && (\n            <span className='error-text'>{errors.password.message}</span>\n          )}\n        </p>\n        <div className='align-right'>\n          <Button text='Sign Up' loading={loading} disabled={loading} />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default SignUpForm;\n","import SignupForm from '../templates/SignUpForm/SignUpForm';\r\n\r\nconst Signup = () => <SignupForm />;\r\n\r\nexport default Signup;\r\n"],"sourceRoot":""}